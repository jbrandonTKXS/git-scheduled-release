parameters:
  - name: PreviewOnly
    displayName: Preview Changes Only?
    type: string
    default: No
    values:
      - No
      - Yes

  - name: DeployQA
    displayName: Run QA Pipeline Without Pausing?
    type: string
    default: Yes
    values:
      - No
      - Yes

trigger:
  - master
pr: none

pool:
  vmImage: ubuntu-latest

variables:
  - name: devEnvironment
    value: 'dev'
  - name: devEnvSecrets
    value: my_heroku_db_dev

  - name: qaEnvironment
    value: 'qa'
  - name: qaEnvSecrets
    value: my_heroku_db_qa

stages:
  - stage: PreBuildCheck
    displayName: 'Verifying...'
    jobs:
    - job: Verify
      steps:
        - script: docker-compose up -d
          displayName: 'Building Docker'
        - script: docker-compose run --rm liquibase /liquibase/liquibase --defaultsFile "changelog/liquibase.properties" update
          displayName: 'Testing Deploying to empty db'

  - stage: Build
    displayName: 'Building Liquibase Artifact'
    dependsOn: PreBuildCheck
    jobs:
    - job: Build
      steps:
      - publish: $(Agent.BuildDirectory)/s/
        artifact: changelogs

  - stage: DEV
    displayName: 'Deploy to DEV Environment'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DEV
        workspace:
          clean: all
        environment: $(devEnvironment)
        strategy: 
          runOnce:
            deploy:
              steps:
                - checkout: none
                - template: liquibase-deploy-template.yml
                  parameters:
                    defaultsFileName: $(devEnvSecrets)
                    classpath: /liquibase/changelog
                    masterChangelog: master.changelog.xml
                    env: dev
                    previewOnly: '${{ parameters.PreviewOnly }}'

  - stage: WaitQA
    displayName: 'Pausing...'
    dependsOn: DEV
    condition: and(succeeded(), eq('${{ parameters.DeployQA }}', 'No'))
    jobs:
      - job: Verify
        steps:
          - bash: echo "##vso[task.LogIssue type=warning;]You can resume this pipeline to deploy to the next step within 14 days.  The pipeline will timeout in 14 days." 
      - job: waitForValidation
        displayName: Resume QA Deployment When Ready
        pool: server    
        timeoutInMinutes: 20160 # job times out in 14 days
        steps:   
        - task: ManualValidation@0
          timeoutInMinutes: 20160 # task times out in 14 days
          inputs:
            instructions: 'Please resume the pipeline if (and when) ready.'
            onTimeout: 'reject'

  - stage: QA
    displayName: 'Deploy to QA Environment'
    dependsOn: WaitQA
    condition: and(succeeded(), in(dependencies.WaitQA.result, 'Skipped', 'Succeeded'))
    jobs:
      - deployment: QA
        workspace:
          clean: all
        environment: $(qaEnvironment)
        strategy: 
          runOnce:
            deploy:
              steps:
                - checkout: none
                - template: liquibase-deploy-template.yml
                  parameters:
                    defaultsFileName: $(qaEnvSecrets)
                    classpath: /liquibase/changelog
                    masterChangelog: master.changelog.xml
                    env: qa
                    previewOnly: '${{ parameters.PreviewOnly }}'